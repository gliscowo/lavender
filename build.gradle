plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
}

version = "${project.mod_version}+${project.minecraft_base_version}"
group = project.maven_group

sourceSets {
    testmod {
        runtimeClasspath += main.runtimeClasspath
        compileClasspath += main.compileClasspath
    }
}

loom {
    accessWidenerPath = project.file("src/main/resources/lavender.accesswidener")

    runs {
        testmodClient {
            client()
            ideConfigGenerated true
            name "Testmod Client"
            source sourceSets.testmod
        }

        testmodServer {
            server()
            ideConfigGenerated true
            name "Testmod Server"
            source sourceSets.testmod
        }
    }
}

repositories {
    maven { url "https://maven.wispforest.io/releases/" }

    // rei
    maven { url "https://maven.shedaniel.me/" }

    // modmenu
    maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    annotationProcessor modImplementation("io.wispforest:owo-lib:${project.owo_version}")
    include "io.wispforest:owo-sentinel:${project.owo_version}"

//    modLocalRuntime "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"

    include modApi("io.wispforest.lavender-md:core:${project.lavender_md_version}")
    include modApi("io.wispforest.lavender-md:owo-ui:${project.lavender_md_version}")

    modLocalRuntime "com.terraformersmc:modmenu:${project.modmenu_version}"

    // --- testmod ---

    testmodImplementation sourceSets.main.output
}

base {
    archivesName = project.archives_base_name
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

//tasks.withType(JavaCompile).configureEach {
//    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
//    it.options.release = 17
//}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}"}
    }
}

def ENV = System.getenv()
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            url ENV.MAVEN_URL
            credentials {
                username ENV.MAVEN_USER
                password ENV.MAVEN_PASSWORD
            }
        }
    }
}
